{"ast":null,"code":"var _jsxFileName = \"/Users/yungughyeon/Desktop/gukhyeon/globaltest/src/store/2_context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nexport const useModalStore = () => {\n  _s();\n  return useContext(ModalContext);\n};\n_s(useModalStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction ModalProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModalOpen = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n  const toggleModalOpen2 = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n  const handleToggleModal = () => {\n    if (toggleModalOpen && toggleModalOpen2) {\n      return true;\n    } else return false;\n  };\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      isModalOpen,\n      toggleModalOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s2(ModalProvider, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ModalProvider;\nexport default ModalProvider;\nvar _c;\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","jsxDEV","_jsxDEV","ModalContext","useModalStore","_s","ModalProvider","_ref","_s2","children","isModalOpen","setIsModalOpen","toggleModalOpen","prevState","toggleModalOpen2","handleToggleModal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yungughyeon/Desktop/gukhyeon/globaltest/src/store/2_context.js"],"sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\n\nconst ModalContext = createContext();\nexport const useModalStore = () => useContext(ModalContext);\n\nfunction ModalProvider({ children }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModalOpen = () => {\n    setIsModalOpen((prevState) => !prevState);\n  };\n\n  const toggleModalOpen2 = () => {\n    setIsModalOpen((prevState) => !prevState);\n  };\n\n  const handleToggleModal = () => {\n    if (toggleModalOpen && toggleModalOpen2) {\n      return true;\n    } else return false;\n  };\n\n  return (\n    <ModalContext.Provider value={{ isModalOpen, toggleModalOpen }}>\n      {children}\n    </ModalContext.Provider>\n  );\n}\n\nexport default ModalProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGJ,aAAa,EAAE;AACpC,OAAO,MAAMK,aAAa,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA/CD,aAAa;AAE1B,SAASE,aAAaA,CAAAC,IAAA,EAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EAC3C,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,cAAc,CAAEE,SAAS,IAAK,CAACA,SAAS,CAAC;EAC3C,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIH,eAAe,IAAIE,gBAAgB,EAAE;MACvC,OAAO,IAAI;IACb,CAAC,MAAM,OAAO,KAAK;EACrB,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEP,WAAW;MAAEE;IAAgB,CAAE;IAAAH,QAAA,EAC5DA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAE5B;AAACb,GAAA,CAtBQF,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}