전체적인 흐름
document.querySelector = form, table, button 선택

recipe 레시피 데이터를 저장할 객체 생성

form.addEventListener('submit') 새로고침 방지

document.getElementByName = p 태그 안에 input 선택하기

변수를 만들고 input 선택자의 값에 공백이 생기지 않게 trim() 함수를 사용해 대입

if문을 사용해 아무것도 입력되지 않았을 경우 alert로 알림

if문을 사용해 재료가 등록된 상태라면 alert로 알림

recipe에 재료를 담고 무게를 대입한다

변수를 만들고 table에 insertRow()(표의 행을 추가하는 메소드)함수를 대입

insertCell() 함수를 사용해서 textContent로 표 안에 재료와 무게를 넣어준다.
(table row element에 새로운 cell을 추가해줍니다.
즉, insertRow()로 생성한 row에 cell을 추가해줍니다.)


삭제버튼 만들기

document.createElement를 사용해 button을 추가하고 
textContent로 버튼의 이름을 정해준다.
addEventListener 사용해서 클릭시 등록된 레시피와 추가된 행을 삭제하는 버튼을 만든다
(delete 사용)
(
removeEventListener()라는게 있어 찾아봤지만,
  removeEventListener는 이미 등록된 이벤트 리스너를 제거하는 메서드입니다. 
  이 메서드를 사용하려면 먼저 등록된 이벤트 리스너에 대한 참조를 알고 있어야 합니다.
뭐라는지 몰라서 패스
)

행이 추가되었을 때 삭제버튼이 자식으로 들어가야 하기 때문에 appendChild()를 사용해서 삭제버튼을 자식으로 추가 

input 안에는 문자열을 받아야 하므로 각 선택한 input의 value 마다 빈 문자열을 넣어준다


제출버튼 만들기
addEventListener() 로 클릭 이벤트 생성
변수를 만들고 html의 ul 태그 id 값을 선택
버튼 클릭시 화면에 보여야 하기 때문에 innerHTML = "" 사용

for...in을 사용해서 재료 안에 레시피를 넣어주고 
변수를 만들어 ul안에 들어갈 li 태그를 만든다(createElement())
만든 변수에 textContent를 써서 백틱(``)을 사용해 보기 좋게 재료이름과 무게를 보여준다.
이걸 다시 ul 태그의 자식으로 넣기 위해 appendChild() 사용해준다

recipe에 다시 빈 객체를 대입하고
제출 클릭시 표에서 재료 목록을 없애주기 위해
querySelectorAll을 사용해서 thead가 아닌 것들을 삭제해준다.
(querySelectorAll('th')를 사용하는 것도 해보자)



----------------------------------------------------------------------

/* 
레시피 재료 추가하기
*/
const form = document.querySelector("#ingredient-form");
const table = document.querySelector("table");
const submitButton = document.querySelector("#submit_button");

// 레시피 데이터를 저장할 객체
const recipe = {};

// 재료 추가 이벤트 핸들러
form.addEventListener("submit", (event) => {
  event.preventDefault();

  const ingredientInput = form.querySelector('input[name="ingredient"]');
  const weightInput = form.querySelector('input[name="weight"]');

  const ingredient = ingredientInput.value.trim();
  const weight = weightInput.value.trim();

  if (ingredient === "" || weight === "") {
    alert("모든 필드를 입력해주세요!");
    return;
  }

  if (recipe[ingredient]) {
    alert("이미 등록된 재료입니다!");
    return;
  }

  recipe[ingredient] = weight;

  const row = table.insertRow();
  row.insertCell().textContent = ingredient;
  row.insertCell().textContent = weight;
  const removeButton = document.createElement("button");
  removeButton.textContent = "삭제";
  removeButton.addEventListener("click", () => {
    delete recipe[ingredient];
    row.remove();
  });
  row.insertCell().appendChild(removeButton);

  ingredientInput.value = "";
  weightInput.value = "";
});

// 제출 버튼 클릭 이벤트 핸들러
submitButton.addEventListener("click", () => {
  const ingredientList = document.querySelector("#ingredient-list");
  ingredientList.innerHTML = "";

  for (const ingredient in recipe) {
    const listItem = document.createElement("li");
    listItem.textContent = `${ingredient}: ${recipe[ingredient]}`;
    ingredientList.appendChild(listItem);
  }

  recipe = {};
  table.querySelectorAll("tr:not(.thead)").forEach((row) => row.remove());
});
